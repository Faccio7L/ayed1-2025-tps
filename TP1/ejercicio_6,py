from typing import List
def entero_a_lista(n:int) -> list[int]:
    """
    convierte un entero a una lista.
    pre: Recibe un entero
    post: Retorna el entero recibido en forma de lista, un digito = un indice.
    """
    lista = []
    while n > 0:
        resto_parcial = n % 10 #obtengo ultimo digito
        lista.append(resto_parcial)
        n = n//10 #elimino el ultimo EN CADA PASADA.
    lista.reverse()
    return lista


#def union_listas(a:list,b:list) -> list[int]:
    """
    une listas.
    pre: Toma como parametros dos listas de enteros.
    post: Retorna una lista extendida(toma A como principal)
    """
    a.extend(b)
    return a

def lista_a_entero(lista:list)-> int:
    """
    Transorma una lista de enteros a un numero entero.
    pre: Recibe como parametro una lista de enteros.
    post: Retorna un entero 
    """
    entero = 0
    for digito in lista:
        entero = entero * 10  + digito #primera pasada: 0 * 10 + 5(por ejemplo), segunda pasada: 50 + 2do digito digito,etc.
    return entero


def main() -> None:
    """
    Se ingresan 2 numeros enteros, se invoca otras funciones para finalmente mostrar la union de los mismos.
    pre:No recibe parametros
    post:Muestra en pantalla la union de dos numeros enteros.
    """
    validacion = (lambda x,y: x > 0 and y > 0)
    num_1 = int(input("Ingrese un numero positivo:"))
    lista_1 = entero_a_lista(num_1)
    num_2 = int(input("Ingrese otro numero positivo:"))
    lista_2 = entero_a_lista(num_2)
    if validacion(num_1,num_2):
        union_lista = lista_1 + lista_2
        union_enteros = lista_a_entero(union_lista)
        print(f" La union de los numeros enteros es: {union_enteros}")
    else:
        print("Debe ingresar dos numeros positivos")

main()


